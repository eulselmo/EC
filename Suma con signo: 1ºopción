.section .data
.macro linea
	 .int 1,1,1,1
 	 #.int 2,2,2,2
	 #.int 1,2,3,4
	 #.int -1,-1,-1,-1
	 #.int 0xfffffffff, 0xfffffffff, 0xfffffffff, 0xfffffffff
 	 #.int 0x08000000, 0x08000000, 0x08000000, 0x08000000
	 #.int 0x10000000, 0x10000000, 0x10000000, 0x10000000
	 .endm

lista: .irpc i,12345678
	linea
	.endr

longlista:	.int (.-lista)/4
resultado:	.quad -1
formato: 
     .ascii "suma = %lld = %llx hex\n\0"

.section .text

#_start:	.global _start
main: .global main	

	mov    $lista, %ebx
	mov longlista, %ecx
	call suma
	mov %esi, resultado
	mov %edi, resultado+4

	push resultado+4
	push resultado
	push resultado+4
	push resultado
	push $formato
	
	call printf
	add $20, %esp

	ret
	

suma:
	push %ebp
	mov $0, %esi
	mov $0, %ebp
	mov $0, %edi
bucle:
	mov (%ebx,%ebp,4), %eax
	cmp $0, %eax
	js negativo	
	add %eax, %esi	
	adc $0, %edi
	
	jmp seguir
	

negativo:
	add %eax, %esi	
	adc $-1, %edi
seguir:
	inc %ebp
	cmp %ebp,%ecx
	jne bucle

	pop %ebp
	ret
